; USEFUL INFORMATION:

; Welcome to the config file that makes the CROW, the Clerical Resolution 
; Online Widget, work with the data you are clerically reviewing!

; This is a file that you will have to edit and put next to the CROW_clusters.py
; in the filespace that contains the clerical matching files. 
; Once you have edited it, you and your clerical matchers can simpy run the 
; CROW_clusters.py from whatever Python IDE you are using. This way no one will 
; have to edit any code. 

; As you can see this file is laid out into sections. Below is the section titles
; along with a description of what each section does. NOTE - do NOT change the 
; section title names (i.e. the bits in square brackets ([])), only change the 
; information underneath each section title. 

; [custom_settings] - decide whether to include a commentbox in the CROW to allow
;                     your matchers to make any comments on what they are viewing.
;                     Also specify what comment values are displayed to clerical matchers.
; [matching_files_details] - tell the CROW where your matching files exist. This will 
;                            be your file path.
; [column_headers_and_order] - in this section you need to tell the CROW what your 
;                              column headers are called and in what order you want them 
;                              to appear. For instance, common column headers are
;                              First Name or Postcode. See [column_headers_and_order]
;                              for more detail.
;                              Essentially these are the variables that may be shared
;                              across the one or more datasets you have linked. 
;                              You can specify the order you want them to appear in by
;                              typing in ', <your order number>' after the title. See
;                              [column_headers_and_order] for more detail.
; [columnfile_info_and_order] - in this section you need to tell the CROW what column  
;                               variables you have in your clerical matching '.csv' files, 
;                               what dataset each column variable belongs to and what order
;                               they should be displayed in (these will displayed from left
;                               to right).
;                               NOTE: these columns must be in the same order as in
;                               [column_headers_and_order].
;                               TIP 1 - When telling the CROW what columns variables you have,
;                               it helps if you have one of your clerical matching files
;                               open when your are entering in what column variables you have. 
;                               Any spelling errors or other inconsistencies will cause CROW to 
;                               crash.
;                               TIP 2 - When entering what dataset each colun variable belongs
;                               to, PLEASE ENSURE they are consistent with what you have entered 
;                               in the section [dataset_names].                   

; SECTIONS TO EDIT:

[custom_settings]
; if commentbox is 1 it will include a commentbox, if commentbox is 0 it will not.
; comment_values should equal a comma-separated list of default values for comments.
; num_records_checkpoint is the number of records between each backup/checkpoint save.

commentbox = 1
comment_values = twins,contact respondent,needs expert review
num_records_checkpoint = 5

[matching_files_details]
; Enter the exact pathway where your clerical matching files exist 

file_pathway = enter/your/path/here

[column_headers_and_order]
; tell the CROW what your column headers are and in what order
; you want to order them in. This should be entered after the '=' sign 
; in the following order: Example = <Column_Title> , <Column_Order>

fname = First_Name , 1
sname = Last_Name , 2
dob= Day_Of_Birth , 3
mob= Month_Of_Birth, 4
yob= Year_Of_Birth , 5
sex= Sex, 6
address= Address, 7
postcode= Postcode, 8
Source_Dataset = Source, 11


[columnfile_info_and_order]
; tell the CROW what column variables you want to display 
; and be clerically reviewed. Tell The CROW what dataset this
; belongs to and in what order. 
; This should be entered after the '=' sign in the following order:
; Example = <Column_Variable_From_CSV>
; NOTE: these columns must be in the same order as in [column_headers_and_order].

fname = First_Name
sname = Last_Name
dob= Day_Of_Birth
mob= Month_Of_Birth
yob= Year_Of_Birth
sex= Sex
address= Address
postcode= Postcode
Source_Dataset = Source

[cluster_id_number]
; the column name in your csv that contains your unique cluster number

cluster_id = Cluster_Number

[record_id_col]
; the column name in your csv that contains your unique record ID
; NOTE: very long record IDs, e.g. those created with the 
; monotonically_increasing_id function in pyspark, may be rounded
; to the same value by Excel. To get around this, you could add a character
; at the start of each of your record IDs
record_id = Resident_ID